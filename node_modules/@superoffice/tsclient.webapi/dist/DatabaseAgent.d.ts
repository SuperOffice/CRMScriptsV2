import { AxiosRequestConfig } from 'axios';
import * as base from './WebApiBase';
import * as carriers from './Carriers';
/**
 * Database schema queries and changes
 */
export interface IDatabaseAgent {
    GetStepsInDatabase(webapi_options?: base.WebApiRequestOptions): Promise<carriers.DictionaryStepInformation[]>;
    GetStepsFromNetServerCode(webapi_options?: base.WebApiRequestOptions): Promise<carriers.DictionaryStepInformation[]>;
}
/**
 * Database schema queries and changes
 */
export declare class DatabaseAgent extends base.WebApiBase implements IDatabaseAgent {
    constructor(baseUrl?: string, languageCode?: string, cultureCode?: string);
    constructor(baseUrl?: string, resourceParsing?: base.ResourceParsing);
    constructor(baseUrl: string, resourceManager: any);
    constructor(baseUrl: string, config: AxiosRequestConfig, resourceManager: any);
    constructor(baseUrl: string, config: AxiosRequestConfig, resourceParsing?: base.ResourceParsing);
    constructor(baseUrl: string, config: AxiosRequestConfig, languageCode?: string, cultureCode?: string);
    constructor(options: base.WebApiOptions);
    private _GetStepsInDatabase;
    /**
     * Get information about the dictionary steps that are in the currently-loggedon database
     * @returns Array of dictionary steps in the database, listing only the highest number for each step
     */
    GetStepsInDatabase(webapi_options?: base.WebApiRequestOptions): Promise<carriers.DictionaryStepInformation[]>;
    private _GetStepsFromNetServerCode;
    /**
     * Get information about the dictionary steps that NetServer was generated for
     * @returns Array of dictionary steps used when NetServer was generated, listing only the highest number for each step
     */
    GetStepsFromNetServerCode(webapi_options?: base.WebApiRequestOptions): Promise<carriers.DictionaryStepInformation[]>;
}
//# sourceMappingURL=DatabaseAgent.d.ts.map