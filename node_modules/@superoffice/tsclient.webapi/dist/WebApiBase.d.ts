import { AxiosInstance, AxiosRequestConfig, CancelTokenSource } from "axios";
/** HTTP Request status on options object. Negative values indicate failure or cancellation. */
export declare enum WebApiStatus {
    Unknown = 0,
    Pending = 1,
    Completed = 10,
    Failed = -1,
    Cancelled = -4
}
/** How should Blob objects be returned? */
export declare enum ReturnBlobType {
    /** Return blob as ArrayBuffer */
    AsArrayBuffer = 0,
    /** Return Base64 string */
    AsBase64 = 1,
    /** Return blob as string */
    AsString = 2
}
/**
 * customize a single request: override language, monitor request state, cancel request using cancelToken.
 */
export interface WebApiRequestOptions {
    /** ISO 2 letter language code ('en', 'sv' etc) or '' to disable language parsing. */
    languageCode?: string;
    /** ISO 2 letter language code ('en', 'sv' etc) or '' to disable language parsing. */
    cultureCode?: string;
    /** SuperOffice Timezone ID or name ('UTC', 'AU-WA', 'FR', etc). Blank means the user's current timezone is used; see the SO-TIMEZONE reponse header. */
    timezone?: string;
    /** Include the timezone info on datetimes in the response? This may trigger conversions. e.g. Datetimes are returned with "Z" or "+2:00" suffix. See the SO-TIMEZONE reponse header. */
    timezoneInclude?: boolean;
    /** AbortController object - provides a method to abort the request */
    abortController?: AbortController;
    /** @deprecated cancel token object - provides a cancel(msg) method to abortbort the request */
    cancelToken?: CancelTokenSource;
    /** Has the HTTP request completed?. Negative values = failure/cancel. Completed OK = 10 */
    requestStatus?: WebApiStatus;
    /** How should BLOBs be returned: Base64, string or ArrayBuffer. */
    returnBlobAs?: ReturnBlobType;
    threshold?: IThreshold;
}
/**
 * Set a threshold on the request. When timeout is reached, callback will be executed. If request finished within timeout a successCallback is called
 */
export interface IThreshold {
    callback?: () => void;
    successCallback?: () => void;
    errorCallback?: () => void;
    timeout: number;
    timeoutHandler?: any;
}
/**
 * GET requests for the REST API
 */
export interface WebApiGetRequestOptions extends WebApiRequestOptions {
    /** Return entity only if it has been modified after the date, otherwise return HTTP 304 NotModified */
    ifModifiedSince?: Date;
    /** Return entity only if it has not been modified after the date, otherwise return HTTP 412 PreconditionFailed */
    ifUnmodifiedSince?: Date;
    /** Should HTTP 304 NotModified response throw error or return NULL? Default = return NULL */
    ifNotModifiedThrowError?: boolean;
}
/**
 * PUT and PATCH and DELETE requests for the REST API
 */
export interface WebApiPutRequestOptions extends WebApiRequestOptions {
    /** Return entity only if it has not been modified after the date, otherwise return HTTP 412 PreconditionFailed */
    ifUnmodifiedSince?: Date;
}
/** RFC6902 patch operations */
export declare enum WebApiPatchOp {
    add = "add",
    remove = "remove",
    replace = "replace",
    test = "test"
}
/** RFC6902 patch operation description. */
export interface WebApiPatchOperation {
    /** "add", "remove", "replace", or "test" */
    op: WebApiPatchOp;
    /** Path to property to apply op to: "/Department" - case insensitive. */
    path: string;
    /** Value to replace/add to the property identified by path. Not used by "remove" op. */
    value?: any;
}
/**
 * Configure the agent with a default URL, language values, whether to parse resource strings.
 * Can be overriden on individual requests using WebApiRequestOptions
 */
export interface WebApiOptions {
    /** The URL to API endpoint. 'https://crm.example.com/api' */
    baseUrl?: string;
    /** Additional path to add to the baseUrl. For internal use */
    basePath?: string;
    /** Should we send a language/culture header? */
    resourceParsing?: ResourceParsing;
    /** Language ISO code to parse responses to. Sends to server using Accept-Language header. e.g. 'en' or 'sv' */
    languageCode?: string;
    /** Language ISO code to parse values to. Sends to server using SO-CULTURE header. e.g. 'en' or 'sv'. Defaults to same as languageCode. */
    cultureCode?: string;
    /** SuperOffice Timezone ID ('UTC', 'AU-WA', 'FR', etc) or '' to disable timezone conversions */
    timezone?: string;
    /** Include the timezone info on the response? This may trigger conversions into local timezone by the runtime */
    timezoneInclude?: boolean;
    axios?: AxiosInstance;
    /** Default axios configuration. Overridden by languageCode/cultureCode. */
    axiosConfig?: AxiosRequestConfig;
    resourceManager?: any;
    cache?: cacheOptions;
    errorHandler?: (error: any) => Promise<any>;
}
export interface cacheOptions {
    refresh?: boolean;
    duration?: number;
}
/** Should WebAPI decode resource and multilang strings? Sets HTTP Language and Culture request headers to blank. */
export declare enum ResourceParsing {
    /** Enables string substitution in responses. Sends the culture/language header. */
    Parse = 0,
    /** Disables string substitution. Does not send culture/language header. */
    DoNotParse = 1
}
/** Base class for /api/v1/Agents/ clients */
export declare class WebApiBase {
    static _global_options: WebApiOptions;
    protected _options: WebApiOptions;
    protected _axios: AxiosInstance;
    constructor(options: WebApiOptions, createAxios?: boolean);
    private responseHandler;
    private errorHandler;
    private requestHandler;
    protected SetBaseUrl(options: WebApiOptions): void;
    private hashValue;
    protected static CloneOptions(options: WebApiOptions): WebApiOptions;
    static GetAxiosRequestConfig(options?: WebApiRequestOptions, baseOptions?: WebApiOptions): AxiosRequestConfig;
    static SetXSRFTokenFromHiddenField(): void;
    private static validateModifiedStatus;
    private static validate200Status;
    static FigureOutOptions(baseUrlOrOptions: string | WebApiOptions | undefined, langOrconfigOrRMOrParse?: string | ResourceParsing | AxiosRequestConfig | any, langOrResourceOrRM?: string | ResourceParsing | any, cultureCode?: string): WebApiOptions;
    /** @deprecated Make a new cancel token that can be placed in an WebApiRequestOptions object. */
    MakeCancelToken(): CancelTokenSource;
    /** Make a new AbortController that can be placed in an  WebApiRequestOptions object */
    MakeAbortController(): AbortController;
    /** @deprecated Make a new options object with an cancelToken on it. */
    MakeOptions(): WebApiRequestOptions;
    /** Make a new options object with an abortController on it */
    MakeAbortableOptions(): WebApiRequestOptions;
    static SetPending(options: WebApiRequestOptions): void;
    static SetCompleted(options: WebApiRequestOptions): void;
    static HandleError(options: WebApiRequestOptions, config: AxiosRequestConfig, err: any): void;
}
//# sourceMappingURL=WebApiBase.d.ts.map