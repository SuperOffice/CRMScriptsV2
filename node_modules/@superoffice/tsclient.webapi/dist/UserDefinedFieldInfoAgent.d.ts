import { AxiosRequestConfig } from 'axios';
import * as enums from './Enums';
import * as base from './WebApiBase';
import * as carriers from './Carriers';
/**
 * Returns information about user-defined fields, like field type, field size, field label text, default value. Does not return the actual values in the user-defined fields. The values are returned on the entity objects.
 */
export interface IUserDefinedFieldInfoAgent {
    CreateDefaultUserDefinedFieldInfo(): Promise<carriers.UserDefinedFieldInfo>;
    SaveUserDefinedFieldInfo(entity: carriers.UserDefinedFieldInfo): Promise<carriers.UserDefinedFieldInfo>;
    DeleteUserDefinedFieldInfo(UserDefinedFieldInfoId: number): Promise<void>;
    GetCustomFieldInfoList(request: carriers.UserDefinedFieldInfo_GetCustomFieldInfoListRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.FieldInfoBase[]>;
    GetCustomFieldInfoList(tableName: string, includeStandard: boolean, webapi_options?: base.WebApiRequestOptions): Promise<carriers.FieldInfoBase[]>;
    GetCustomFieldInfo(request: carriers.UserDefinedFieldInfo_GetCustomFieldInfoRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.FieldInfoBase>;
    GetCustomFieldInfo(tableName: string, fieldName: string, webapi_options?: base.WebApiRequestOptions): Promise<carriers.FieldInfoBase>;
    GetUserDefinedFieldInfo(userDefinedFieldInfoId: number): Promise<carriers.UserDefinedFieldInfo>;
    GetUserDefinedFieldList(request: carriers.UserDefinedFieldInfo_GetUserDefinedFieldListRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    GetUserDefinedFieldList(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    GetPublishedUserDefinedFieldList(request: carriers.UserDefinedFieldInfo_GetPublishedUserDefinedFieldListRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    GetPublishedUserDefinedFieldList(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    GetUserDefinedFieldFromFieldLabel(request: carriers.UserDefinedFieldInfo_GetUserDefinedFieldFromFieldLabelRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    GetUserDefinedFieldFromFieldLabel(fieldLabel: string, ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    GetPublishedUserDefinedFieldFromFieldLabel(request: carriers.UserDefinedFieldInfo_GetPublishedUserDefinedFieldFromFieldLabelRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    GetPublishedUserDefinedFieldFromFieldLabel(fieldLabel: string, ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    GetUserDefinedFieldFromProgId(request: carriers.UserDefinedFieldInfo_GetUserDefinedFieldFromProgIdRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    GetUserDefinedFieldFromProgId(progId: string, ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    GetPublishedUserDefinedFieldFromProgId(request: carriers.UserDefinedFieldInfo_GetPublishedUserDefinedFieldFromProgIdRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    GetPublishedUserDefinedFieldFromProgId(progId: string, ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    GetUserDefinedFieldFromIds(request: carriers.UserDefinedFieldInfo_GetUserDefinedFieldFromIdsRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    GetUserDefinedFieldFromIds(ids: number[], webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    GetUserDefinedFieldFromProgIds(request: carriers.UserDefinedFieldInfo_GetUserDefinedFieldFromProgIdsRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    GetUserDefinedFieldFromProgIds(progIds: string[], ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    CreateUserDefinedFieldInfo(request: carriers.UserDefinedFieldInfo_CreateUserDefinedFieldInfoRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    CreateUserDefinedFieldInfo(ownerType: enums.UDefType, fieldType: enums.UDefFieldType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    ChangeFieldType(request: carriers.UserDefinedFieldInfo_ChangeFieldTypeRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    ChangeFieldType(info: carriers.UserDefinedFieldInfo, fieldType: enums.UDefFieldType, isIndexed: boolean, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    GetUserDefinedPageOneFields(request: carriers.UserDefinedFieldInfo_GetUserDefinedPageOneFieldsRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    GetUserDefinedPageOneFields(ownerType: enums.UDefType, userGroupId: number, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    GetPublishedUserDefinedPageOneFields(request: carriers.UserDefinedFieldInfo_GetPublishedUserDefinedPageOneFieldsRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    GetPublishedUserDefinedPageOneFields(ownerType: enums.UDefType, userGroupId: number, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    Publish(request: carriers.UserDefinedFieldInfo_PublishRequest, webapi_options?: base.WebApiRequestOptions): Promise<number>;
    Publish(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<number>;
    Revert(request: carriers.UserDefinedFieldInfo_RevertRequest, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    Revert(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    SaveUserDefinedFieldInfos(request: carriers.UserDefinedFieldInfo_SaveUserDefinedFieldInfosRequest, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    SaveUserDefinedFieldInfos(infos: carriers.UserDefinedFieldInfo[], webapi_options?: base.WebApiRequestOptions): Promise<void>;
    DetectUnpublishedChanges(request: carriers.UserDefinedFieldInfo_DetectUnpublishedChangesRequest, webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    DetectUnpublishedChanges(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    DetectColumnIdChanges(request: carriers.UserDefinedFieldInfo_DetectColumnIdChangesRequest, webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    DetectColumnIdChanges(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    SetUserDefinedPageOneField(request: carriers.UserDefinedFieldInfo_SetUserDefinedPageOneFieldRequest, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    SetUserDefinedPageOneField(ownerType: enums.UDefType, udefFieldId: number, userGroupId: number, fieldLineNo: number, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    IsPublishEventActive(request: carriers.UserDefinedFieldInfo_IsPublishEventActiveRequest, webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    IsPublishEventActive(type: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    IsAnyPublishEventActive(webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    GetChangedPageOneFields(request: carriers.UserDefinedFieldInfo_GetChangedPageOneFieldsRequest, webapi_options?: base.WebApiRequestOptions): Promise<boolean[]>;
    GetChangedPageOneFields(ownerType: enums.UDefType, userGroupId: number, webapi_options?: base.WebApiRequestOptions): Promise<boolean[]>;
    SetPageOneFieldGrouping(request: carriers.UserDefinedFieldInfo_SetPageOneFieldGroupingRequest, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    SetPageOneFieldGrouping(ownerType: enums.UDefType, active: boolean, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    SetListTableIdAndUDListDefinitionIdFromSelectedListId(request: carriers.UserDefinedFieldInfo_SetListTableIdAndUDListDefinitionIdFromSelectedListIdRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    SetListTableIdAndUDListDefinitionIdFromSelectedListId(info: carriers.UserDefinedFieldInfo, selectedListId: number, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    FigureOutListIdFromListTableIdAndUDListDefinitionId(request: carriers.UserDefinedFieldInfo_FigureOutListIdFromListTableIdAndUDListDefinitionIdRequest, webapi_options?: base.WebApiRequestOptions): Promise<number>;
    FigureOutListIdFromListTableIdAndUDListDefinitionId(info: carriers.UserDefinedFieldInfo, webapi_options?: base.WebApiRequestOptions): Promise<number>;
    SetRankOnFields(request: carriers.UserDefinedFieldInfo_SetRankOnFieldsRequest, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    SetRankOnFields(ownerType: enums.UDefType, rankedFieldsIds: number[], webapi_options?: base.WebApiRequestOptions): Promise<void>;
    SetPublishStartSystemEvent(request: carriers.UserDefinedFieldInfo_SetPublishStartSystemEventRequest, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    SetPublishStartSystemEvent(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    ClearCaches(webapi_options?: base.WebApiRequestOptions): Promise<void>;
}
/**
 * Returns information about user-defined fields, like field type, field size, field label text, default value. Does not return the actual values in the user-defined fields. The values are returned on the entity objects.
 */
export declare class UserDefinedFieldInfoAgent extends base.WebApiBase implements IUserDefinedFieldInfoAgent {
    constructor(baseUrl?: string, languageCode?: string, cultureCode?: string);
    constructor(baseUrl?: string, resourceParsing?: base.ResourceParsing);
    constructor(baseUrl: string, resourceManager: any);
    constructor(baseUrl: string, config: AxiosRequestConfig, resourceManager: any);
    constructor(baseUrl: string, config: AxiosRequestConfig, resourceParsing?: base.ResourceParsing);
    constructor(baseUrl: string, config: AxiosRequestConfig, languageCode?: string, cultureCode?: string);
    constructor(options: base.WebApiOptions);
    /**
     * Set default values into a new UserDefinedFieldInfo.
     * NetServer calculates default values on the entity, which is required when creating/storing a new instance
     * @param options - Override language/culture codes on this request. Provide cancellation and request status values.
     * @returns A blank entity.
     */
    CreateDefaultUserDefinedFieldInfo(options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    SaveUserDefinedFieldInfo(entity: carriers.UserDefinedFieldInfo, options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    DeleteUserDefinedFieldInfo(UserDefinedFieldInfoId: number, options?: base.WebApiRequestOptions): Promise<void>;
    private _GetCustomFieldInfoList;
    /**
     * Return information about all the custom fields (user-defined + extra) on a particular table
     * @param request - TableName, IncludeStandard
     * @returns Array of user-defined and extra field info in rank order. Describes default values, mandatory, visiblity, labels and choices.
     */
    GetCustomFieldInfoList(request: carriers.UserDefinedFieldInfo_GetCustomFieldInfoListRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.FieldInfoBase[]>;
    /**
     * Return information about all the custom fields (user-defined + extra) on a particular table
     * @param tableName - The name of table that owns the custom fields. e.g. 'contact', 'person', 'project' etc.
     * @param includeStandard - Include standard fields in result. Default false.
     * @returns Array of user-defined and extra field info in rank order. Describes default values, mandatory, visiblity, labels and choices.
     */
    GetCustomFieldInfoList(tableName: string, includeStandard: boolean, webapi_options?: base.WebApiRequestOptions): Promise<carriers.FieldInfoBase[]>;
    private _GetCustomFieldInfo;
    /**
     * Return information about a particular custom field (user-defined + extra) on a particular table
     * @param request - TableName, FieldName
     * @returns user-defined or extra field info. Describes default values, mandatory, visiblity, labels and choices.
     */
    GetCustomFieldInfo(request: carriers.UserDefinedFieldInfo_GetCustomFieldInfoRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.FieldInfoBase>;
    /**
     * Return information about a particular custom field (user-defined + extra) on a particular table
     * @param tableName - The name of table that owns the custom fields. e.g. 'contact', 'person', 'project' etc.
     * @param fieldName - The name of the field: prog:id or field name. e.g. 'SuperOffice:21' or 'x_foobar'
     * @returns user-defined or extra field info. Describes default values, mandatory, visiblity, labels and choices.
     */
    GetCustomFieldInfo(tableName: string, fieldName: string, webapi_options?: base.WebApiRequestOptions): Promise<carriers.FieldInfoBase>;
    GetUserDefinedFieldInfo(userDefinedFieldInfoId: number, options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    private _GetUserDefinedFieldList;
    /**
     * Return information about all the user defined fields on a particular owner type (project, contact, person, etc). Note this may be different than the currently published fields.
     * @param request - OwnerType
     * @returns Returns an array of user-defined field info carriers.
     */
    GetUserDefinedFieldList(request: carriers.UserDefinedFieldInfo_GetUserDefinedFieldListRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    /**
     * Return information about all the user defined fields on a particular owner type (project, contact, person, etc). Note this may be different than the currently published fields.
     * @param ownerType - The user-defined field owner-entity id.
     * @returns Returns an array of user-defined field info carriers.
     */
    GetUserDefinedFieldList(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    private _GetPublishedUserDefinedFieldList;
    /**
     * Return information about all the user defined fields on a particular owner type (project, contact, person, etc).
     * @param request - OwnerType
     * @returns Returns an array of user-defined field info carriers.
     */
    GetPublishedUserDefinedFieldList(request: carriers.UserDefinedFieldInfo_GetPublishedUserDefinedFieldListRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    /**
     * Return information about all the user defined fields on a particular owner type (project, contact, person, etc).
     * @param ownerType - The user-defined field owner-entity id.
     * @returns Returns an array of user-defined field info carriers.
     */
    GetPublishedUserDefinedFieldList(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    private _GetUserDefinedFieldFromFieldLabel;
    /**
     * Return information about the given user defined field identified by the owner and the field label. Note that field labels are fuzzy. Leading and trailing spaces and punctuation are ignored. Note this may be different than the currently published fields.
     * @param request - FieldLabel, OwnerType
     * @returns Returns the user-defined field info carrier, or null if no matching field is found.
     */
    GetUserDefinedFieldFromFieldLabel(request: carriers.UserDefinedFieldInfo_GetUserDefinedFieldFromFieldLabelRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    /**
     * Return information about the given user defined field identified by the owner and the field label. Note that field labels are fuzzy. Leading and trailing spaces and punctuation are ignored. Note this may be different than the currently published fields.
     * @param fieldLabel - The field label - the text label shown in the user interface. Trailing spaces and punctuation (":" and ".") are ignored when searching.
     * @param ownerType - The user-defined field owner-entity id.
     * @returns Returns the user-defined field info carrier, or null if no matching field is found.
     */
    GetUserDefinedFieldFromFieldLabel(fieldLabel: string, ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    private _GetPublishedUserDefinedFieldFromFieldLabel;
    /**
     * Return information about the given user defined field identified by the owner and the field label. Note that field labels are fuzzy. Leading and trailing spaces and punctuation are ignored.
     * @param request - FieldLabel, OwnerType
     * @returns Returns the user-defined field info carrier, or null if no matching field is found.
     */
    GetPublishedUserDefinedFieldFromFieldLabel(request: carriers.UserDefinedFieldInfo_GetPublishedUserDefinedFieldFromFieldLabelRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    /**
     * Return information about the given user defined field identified by the owner and the field label. Note that field labels are fuzzy. Leading and trailing spaces and punctuation are ignored.
     * @param fieldLabel - The field label - the text label shown in the user interface. Trailing spaces and punctuation (":" and ".") are ignored when searching.
     * @param ownerType - The user-defined field owner-entity id.
     * @returns Returns the user-defined field info carrier, or null if no matching field is found.
     */
    GetPublishedUserDefinedFieldFromFieldLabel(fieldLabel: string, ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    private _GetUserDefinedFieldFromProgId;
    /**
     * Return information about the given user defined field identified by the owner and the prog-id. The prog-id is used as the key in the entity carriers. Note this may be different than the currently published fields.
     * @param request - ProgId, OwnerType
     * @returns Returns the user-defined field info carrier, or null if no matching field is found.
     */
    GetUserDefinedFieldFromProgId(request: carriers.UserDefinedFieldInfo_GetUserDefinedFieldFromProgIdRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    /**
     * Return information about the given user defined field identified by the owner and the prog-id. The prog-id is used as the key in the entity carriers. Note this may be different than the currently published fields.
     * @param progId - The prog.id is a hidden name that uniquely identifies the field.
     * @param ownerType - The user-defined field owner-entity id.
     * @returns Returns the user-defined field info carrier, or null if no matching field is found.
     */
    GetUserDefinedFieldFromProgId(progId: string, ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    private _GetPublishedUserDefinedFieldFromProgId;
    /**
     * Return information about the given user defined field identified by the owner and the prog-id. The prog-id is used as the key in the entity carriers.
     * @param request - ProgId, OwnerType
     * @returns Returns the user-defined field info carrier, or null if no matching field is found.
     */
    GetPublishedUserDefinedFieldFromProgId(request: carriers.UserDefinedFieldInfo_GetPublishedUserDefinedFieldFromProgIdRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    /**
     * Return information about the given user defined field identified by the owner and the prog-id. The prog-id is used as the key in the entity carriers.
     * @param progId - The prog.id is a hidden name that uniquely identifies the field.
     * @param ownerType - The user-defined field owner-entity id.
     * @returns Returns the user-defined field info carrier, or null if no matching field is found.
     */
    GetPublishedUserDefinedFieldFromProgId(progId: string, ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    private _GetUserDefinedFieldFromIds;
    /**
     * Return an given array of user defined field identified by the ids.
     * @param request - Ids
     * @returns Returns an array of user-defined field info carriers
     */
    GetUserDefinedFieldFromIds(request: carriers.UserDefinedFieldInfo_GetUserDefinedFieldFromIdsRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    /**
     * Return an given array of user defined field identified by the ids.
     * @param ids - Array of user defined field ids
     * @returns Returns an array of user-defined field info carriers
     */
    GetUserDefinedFieldFromIds(ids: number[], webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    private _GetUserDefinedFieldFromProgIds;
    /**
     * Return an given array user defined field identified by the owner and the prog-ids. The prog-id is used as the key in the entity carriers. Note this may be different than the currently published field layout.
     * @param request - ProgIds, OwnerType
     * @returns Returns an array of user-defined field info carriers
     */
    GetUserDefinedFieldFromProgIds(request: carriers.UserDefinedFieldInfo_GetUserDefinedFieldFromProgIdsRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    /**
     * Return an given array user defined field identified by the owner and the prog-ids. The prog-id is used as the key in the entity carriers. Note this may be different than the currently published field layout.
     * @param progIds - The prog.id is a hidden name that uniquely identifies the field.
     * @param ownerType - The user-defined field owner-entity id.
     * @returns Returns an array of user-defined field info carriers
     */
    GetUserDefinedFieldFromProgIds(progIds: string[], ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    private _CreateUserDefinedFieldInfo;
    /**
     * Create a UserDefinedFieldInfo based on a owner-entity id
     * @param request - OwnerType, FieldType
     * @returns Returns the user-defined field info carrier
     */
    CreateUserDefinedFieldInfo(request: carriers.UserDefinedFieldInfo_CreateUserDefinedFieldInfoRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    /**
     * Create a UserDefinedFieldInfo based on a owner-entity id
     * @param ownerType - The user-defined field owner-entity id.
     * @param fieldType - The field type of the new field
     * @returns Returns the user-defined field info carrier
     */
    CreateUserDefinedFieldInfo(ownerType: enums.UDefType, fieldType: enums.UDefFieldType, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    private _ChangeFieldType;
    /**
     * Create a UserDefinedFieldInfo based on a owner-entity id
     * @param request - Info, FieldType, IsIndexed
     * @returns Returns the user-defined field info carrier
     */
    ChangeFieldType(request: carriers.UserDefinedFieldInfo_ChangeFieldTypeRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    /**
     * Create a UserDefinedFieldInfo based on a owner-entity id
     * @param info - The user-defined field info carrier to want to modify
     * @param fieldType - The new field type you want
     * @param isIndexed - The new indexed status you want
     * @returns Returns the user-defined field info carrier
     */
    ChangeFieldType(info: carriers.UserDefinedFieldInfo, fieldType: enums.UDefFieldType, isIndexed: boolean, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    private _GetUserDefinedPageOneFields;
    /**
     * Get a list of page one fields for given Udef type and current user group
     * @param request - OwnerType, UserGroupId
     * @returns Returns an array of page one user-defined field info carriers.
     */
    GetUserDefinedPageOneFields(request: carriers.UserDefinedFieldInfo_GetUserDefinedPageOneFieldsRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    /**
     * Get a list of page one fields for given Udef type and current user group
     * @param ownerType - The user-defined field owner-entity.
     * @param userGroupId - Id of UserGroup
     * @returns Returns an array of page one user-defined field info carriers.
     */
    GetUserDefinedPageOneFields(ownerType: enums.UDefType, userGroupId: number, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    private _GetPublishedUserDefinedPageOneFields;
    /**
     * Get a list of page one fields for given Udef type and current user group
     * @param request - OwnerType, UserGroupId
     * @returns Returns an array of page one user-defined field info carriers.
     */
    GetPublishedUserDefinedPageOneFields(request: carriers.UserDefinedFieldInfo_GetPublishedUserDefinedPageOneFieldsRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    /**
     * Get a list of page one fields for given Udef type and current user group
     * @param ownerType - The user-defined field owner-entity.
     * @param userGroupId - Id of UserGroup
     * @returns Returns an array of page one user-defined field info carriers.
     */
    GetPublishedUserDefinedPageOneFields(ownerType: enums.UDefType, userGroupId: number, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo[]>;
    private _Publish;
    /**
     * Publish changed Udef fields for the given owner type
     * @param request - OwnerType
     * @returns Batch task id or 0 that handles publishing.
     */
    Publish(request: carriers.UserDefinedFieldInfo_PublishRequest, webapi_options?: base.WebApiRequestOptions): Promise<number>;
    /**
     * Publish changed Udef fields for the given owner type
     * @param ownerType - The owner type to publish for
     * @returns Batch task id or 0 that handles publishing.
     */
    Publish(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<number>;
    private _Revert;
    /**
     * Revert changed Udef fields for the given owner type - all unpublished changes will be lost
     * @param request - OwnerType
     * @returns
     */
    Revert(request: carriers.UserDefinedFieldInfo_RevertRequest, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    /**
     * Revert changed Udef fields for the given owner type - all unpublished changes will be lost
     * @param ownerType - The owner type to revert fields for
     * @returns
     */
    Revert(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    private _SaveUserDefinedFieldInfos;
    /**
     * Save an array of user defined fields. This will update the unpublished layout.
     * @param request - Infos
     * @returns
     */
    SaveUserDefinedFieldInfos(request: carriers.UserDefinedFieldInfo_SaveUserDefinedFieldInfosRequest, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    /**
     * Save an array of user defined fields. This will update the unpublished layout.
     * @param infos - An array of user defined fields
     * @returns
     */
    SaveUserDefinedFieldInfos(infos: carriers.UserDefinedFieldInfo[], webapi_options?: base.WebApiRequestOptions): Promise<void>;
    private _DetectUnpublishedChanges;
    /**
     * Detect changes to the admin version (unpublished)
     * @param request - OwnerType
     * @returns Returns true if any changes were found. This includes cosmetic changes.
     */
    DetectUnpublishedChanges(request: carriers.UserDefinedFieldInfo_DetectUnpublishedChangesRequest, webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    /**
     * Detect changes to the admin version (unpublished)
     * @param ownerType - The owner type
     * @returns Returns true if any changes were found. This includes cosmetic changes.
     */
    DetectUnpublishedChanges(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    private _DetectColumnIdChanges;
    /**
     * Detect columnid changes to the admin version (for determining publish warning)
     * @param request - OwnerType
     * @returns Returns true if columnid changes where found. i.e. if data needs to be moved during publishing.
     */
    DetectColumnIdChanges(request: carriers.UserDefinedFieldInfo_DetectColumnIdChangesRequest, webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    /**
     * Detect columnid changes to the admin version (for determining publish warning)
     * @param ownerType - The owner type
     * @returns Returns true if columnid changes where found. i.e. if data needs to be moved during publishing.
     */
    DetectColumnIdChanges(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    private _SetUserDefinedPageOneField;
    /**
     * Sets a user defined fields as page one field.
     * @param request - OwnerType, UdefFieldId, UserGroupId, FieldLineNo
     * @returns
     */
    SetUserDefinedPageOneField(request: carriers.UserDefinedFieldInfo_SetUserDefinedPageOneFieldRequest, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    /**
     * Sets a user defined fields as page one field.
     * @param ownerType - The user-defined field owner entity
     * @param udefFieldId - The id of the udeffield to set as page one field
     * @param userGroupId - The usergroup id to associate the page one field with.
     * @param fieldLineNo - Page one line number
     * @returns
     */
    SetUserDefinedPageOneField(ownerType: enums.UDefType, udefFieldId: number, userGroupId: number, fieldLineNo: number, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    private _IsPublishEventActive;
    /**
     * Check if the publish event is active for the given type
     * @param request - Type
     * @returns
     */
    IsPublishEventActive(request: carriers.UserDefinedFieldInfo_IsPublishEventActiveRequest, webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    /**
     * Check if the publish event is active for the given type
     * @param type -
     * @returns
     */
    IsPublishEventActive(type: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    private _IsAnyPublishEventActive;
    /**
     * Check if any publish events are active
     * @returns
     */
    IsAnyPublishEventActive(webapi_options?: base.WebApiRequestOptions): Promise<boolean>;
    private _GetChangedPageOneFields;
    /**
     * Gets which page one fields have changed from the current version
     * @param request - OwnerType, UserGroupId
     * @returns
     */
    GetChangedPageOneFields(request: carriers.UserDefinedFieldInfo_GetChangedPageOneFieldsRequest, webapi_options?: base.WebApiRequestOptions): Promise<boolean[]>;
    /**
     * Gets which page one fields have changed from the current version
     * @param ownerType - The user-defined field owner-entity.
     * @param userGroupId - Id of UserGroup
     * @returns
     */
    GetChangedPageOneFields(ownerType: enums.UDefType, userGroupId: number, webapi_options?: base.WebApiRequestOptions): Promise<boolean[]>;
    private _SetPageOneFieldGrouping;
    /**
     * Sets the Page One Field grouping for a specific entity
     * @param request - OwnerType, Active
     * @returns
     */
    SetPageOneFieldGrouping(request: carriers.UserDefinedFieldInfo_SetPageOneFieldGroupingRequest, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    /**
     * Sets the Page One Field grouping for a specific entity
     * @param ownerType - The user-defined field owner-entity.
     * @param active - If true, use grouping
     * @returns
     */
    SetPageOneFieldGrouping(ownerType: enums.UDefType, active: boolean, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    private _SetListTableIdAndUDListDefinitionIdFromSelectedListId;
    /**
     * Make stuff similar to what happens in the win client
     * @param request - Info, SelectedListId
     * @returns
     */
    SetListTableIdAndUDListDefinitionIdFromSelectedListId(request: carriers.UserDefinedFieldInfo_SetListTableIdAndUDListDefinitionIdFromSelectedListIdRequest, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    /**
     * Make stuff similar to what happens in the win client
     * @param info -
     * @param selectedListId -
     * @returns
     */
    SetListTableIdAndUDListDefinitionIdFromSelectedListId(info: carriers.UserDefinedFieldInfo, selectedListId: number, webapi_options?: base.WebApiRequestOptions): Promise<carriers.UserDefinedFieldInfo>;
    private _FigureOutListIdFromListTableIdAndUDListDefinitionId;
    /**
     * Kind of the reverse of SetListTableIdAndUDListDefinitionIdFromSelectedListId
     * @param request - Info
     * @returns
     */
    FigureOutListIdFromListTableIdAndUDListDefinitionId(request: carriers.UserDefinedFieldInfo_FigureOutListIdFromListTableIdAndUDListDefinitionIdRequest, webapi_options?: base.WebApiRequestOptions): Promise<number>;
    /**
     * Kind of the reverse of SetListTableIdAndUDListDefinitionIdFromSelectedListId
     * @param info -
     * @returns
     */
    FigureOutListIdFromListTableIdAndUDListDefinitionId(info: carriers.UserDefinedFieldInfo, webapi_options?: base.WebApiRequestOptions): Promise<number>;
    private _SetRankOnFields;
    /**
     * Change rank of user defined fields
     * @param request - OwnerType, RankedFieldsIds
     * @returns
     */
    SetRankOnFields(request: carriers.UserDefinedFieldInfo_SetRankOnFieldsRequest, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    /**
     * Change rank of user defined fields
     * @param ownerType - The user-defined field owner-entity.
     * @param rankedFieldsIds - All IDs of this owner-entity in desired rank order
     * @returns
     */
    SetRankOnFields(ownerType: enums.UDefType, rankedFieldsIds: number[], webapi_options?: base.WebApiRequestOptions): Promise<void>;
    private _SetPublishStartSystemEvent;
    /**
     * Set the start flag for udef publishing. Must be called before PUBLISH, or PUBLISH will fail. Start flag is removed when publish process completes.
     * @param request - OwnerType
     * @returns
     */
    SetPublishStartSystemEvent(request: carriers.UserDefinedFieldInfo_SetPublishStartSystemEventRequest, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    /**
     * Set the start flag for udef publishing. Must be called before PUBLISH, or PUBLISH will fail. Start flag is removed when publish process completes.
     * @param ownerType - The user-defined field owner-entity.
     * @returns
     */
    SetPublishStartSystemEvent(ownerType: enums.UDefType, webapi_options?: base.WebApiRequestOptions): Promise<void>;
    private _ClearCaches;
    /**
     * Clear all relevant caches. This is normally done automatically but can be useful in certain circumstances.
     * @returns
     */
    ClearCaches(webapi_options?: base.WebApiRequestOptions): Promise<void>;
}
//# sourceMappingURL=UserDefinedFieldInfoAgent.d.ts.map