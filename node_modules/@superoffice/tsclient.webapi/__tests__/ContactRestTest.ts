import * as assert from "assert";
import axios, { AxiosError, AxiosRequestConfig } from "axios";
import nock = require("nock");
import { ContactRestApi } from "../src/ContactRestApi";

const host: string = "http://localhost/";
const defaultContact = require("./ContactDefault.json");
const aContact = require("./ContactEntity.json");

axios.defaults.baseURL = host;

jest.setTimeout(8888);

describe("WebAPI REST Contact tests", () => {
	it("Get a default contact via REST API", done => {
		let scope = nock(host)
			.matchHeader("authorization", "Basic QURNMDo=")
			.get("/api/v1/Contact/default")
			.reply(200, aContact);

		let config: AxiosRequestConfig = { auth: { username: "ADM0", password: "" } };
		let contactApi = new ContactRestApi(host, config);
		contactApi.GetDefault().then(contact => {
			assert.equal(contact.Name, "Bjørge AS");
			assert.notEqual(contact.ContactId, 0);
			done();
		});
	});

	it("Get a single contact via REST API", done => {
		let scope = nock(host)
			.matchHeader("authorization", "Basic QURNMDo=")
			.get("/api/v1/Contact/1")
			.reply(200, aContact);

		let config: AxiosRequestConfig = { auth: { username: "ADM0", password: "" } };
		let contactApi = new ContactRestApi(host, config);
		contactApi.GetById(1).then(contact1 => {
			assert.equal(contact1.Name, "Bjørge AS");
			assert.notEqual(contact1.ContactId, 0);
			done();
		});
	});

	it("Get a single contact modified since via REST API", done => {
		let scope = nock(host)
			.get("/api/v1/Contact/2")
			.matchHeader("authorization", "Basic QURNMDo=")
			.matchHeader("if-modified-since", "Fri, 31 Jan 2020 23:00:00 GMT")
			.reply(200, aContact);

		const since = new Date(2020, 1, 1);
		let config: AxiosRequestConfig = { auth: { username: "ADM0", password: "" } };
		let contactApi = new ContactRestApi(host, config);
		contactApi.GetById(2, { ifModifiedSince: since }).then(contact2 => {
			assert.equal(contact2.Name, "Bjørge AS");
			assert.notEqual(contact2.ContactId, 0);
			done();
		});
	});

	it("Get a single contact conditional via REST API returns 304 not modified", done => {
		let scope = nock(host)
			.get("/api/v1/Contact/3")
			.matchHeader("authorization", "Basic QURNMDo=")
			.matchHeader("if-modified-since", "Fri, 31 Jan 2020 23:00:00 GMT")
			.reply(304, "");

		const since = new Date(2020, 1, 1);
		let config: AxiosRequestConfig = { auth: { username: "ADM0", password: "" } };
		let contactApi = new ContactRestApi(host, config);
		contactApi
			.GetById(3, { ifModifiedSince: since })
			.then(contact3 => {
				assert.equal(contact3, null);
				done();
			})
			.catch((err: AxiosError) => {
				assert.fail("should not fail");
				done("Should not fail");
			});
	});

	it("Get a single contact conditionally via REST API returns 304 not modified error", done => {
		let scope = nock(host)
			.get("/api/v1/Contact/4")
			.matchHeader("authorization", "Basic QURNMDo=")
			.matchHeader("if-modified-since", "Fri, 31 Jan 2020 23:00:00 GMT")
			.reply(304, null);

		const since = new Date(2020, 1, 1);
		let config: AxiosRequestConfig = { auth: { username: "ADM0", password: "" } };
		let contactApi = new ContactRestApi(host, config);
		contactApi
			.GetById(4, { ifModifiedSince: since, ifNotModifiedThrowError: true })
			.then(contact4 => {
				assert.fail("should fail");
			})
			.catch((err: AxiosError) => {
				assert.equal(err.message, "Request failed with status code 304");
				assert.equal(err.response.status, 304);
				done();
			});
	});

	it("Get a single contact unmodified since via REST API", done => {
		let scope = nock(host)
			.matchHeader("authorization", "Basic QURNMDo=")
			.matchHeader("if-unmodified-since", "Fri, 31 Jan 2020 23:00:00 GMT")
			.get("/api/v1/Contact/5")
			.reply(200, aContact);

		const since = new Date(2020, 1, 1);
		let config: AxiosRequestConfig = { auth: { username: "ADM0", password: "" } };
		let contactApi = new ContactRestApi(host, config);
		contactApi.GetById(5, { ifUnmodifiedSince: since }).then(contact5 => {
			assert.equal(contact5.Name, "Bjørge AS");
			assert.notEqual(contact5.ContactId, 0);
			done();
		});
	});

	it("Get a single contact conditional via REST API returns 412 precond failed", done => {
		let scope = nock(host)
			.get("/api/v1/Contact/6")
			.matchHeader("authorization", "Basic QURNMDo=")
			.matchHeader("if-unmodified-since", "Fri, 31 Jan 2020 23:00:00 GMT")
			.reply(412, "");

		const since = new Date(2020, 1, 1);
		let config: AxiosRequestConfig = { auth: { username: "ADM0", password: "" } };
		let contactApi = new ContactRestApi(host, config);
		contactApi
			.GetById(6, { ifUnmodifiedSince: since })
			.then(contact6 => {
				assert.fail("should not succeed");
			})
			.catch((err: AxiosError) => {
				assert.equal(err.message, "Request failed with status code 412");
				assert.equal(err.response.status, 412);
				done();
			});
	});
});
